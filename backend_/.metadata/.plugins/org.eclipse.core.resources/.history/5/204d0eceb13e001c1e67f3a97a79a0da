package com.alcancia;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.when;

import java.util.Arrays;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;

import com.alcancia.controller.TipoMonedaController;
import com.alcancia.dto.TipoMonedaDto;
import com.alcancia.entity.TipoMoneda;
import com.alcancia.service.TipoMonedaService;

class TipoModenaControllerTest {
	
	@InjectMocks
	private TipoMonedaController controller;
	
	@Mock
	private TipoMonedaService service;
		
	private TipoMoneda tipoMoneda;
	
	private TipoMonedaDto tipoMonedaDto;
	
	@BeforeEach
	void setUp() {
		MockitoAnnotations.initMocks(this);
		
		tipoMoneda = new TipoMoneda();
		tipoMoneda.setId((long) 7);
		tipoMoneda.setNombre(5000);
		
		tipoMonedaDto = new TipoMonedaDto();
		tipoMonedaDto.setId((long) 7);
		tipoMonedaDto.setNombre(5000);
	}
	
	@Test
	void listTest() {
		ResponseEntity<?> res = controller.list();
		assertNotNull(service.findAll());
	}
	
	@Test
	void listOrderTest() {
		ResponseEntity<?> res = controller.listOrder();
		assertNotNull(service.findAll());
	}
	
	@Test
	void saveTest() {
		when(service.save(tipoMoneda)).thenReturn(tipoMoneda);
		BindingResult result = Mockito.mock(BindingResult.class);
		ResponseEntity<?> res = controller.save(tipoMonedaDto, result);
		assertEquals(201, res.getStatusCodeValue());
	}

	

}
